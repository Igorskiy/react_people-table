{"version":3,"sources":["PersonName.js","Person.js","PeopleTable.js","people.js","App.js","index.js"],"names":["PersonName","_ref","person","sex","react_default","a","createElement","Fragment","className","cn","male","female","defaultProps","Person","headers","map","header","key","born-before-1650","born","older_than_65","age","younger_than_65","child","name","src_PersonName","USTORTABLE_TITLES","PeopleTable","people","_useState","useState","_useState2","Object","slicedToArray","isSorting","setIsSorting","_useState3","_useState4","searchTerm","setSearchTerm","_useState5","_useState6","isSelected","setIsSelected","debouncedHandleChange","f","delay","timer","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","debounce","value","trim","toLowerCase","filteredPeople","filter","mother","father","includes","type","placeholder","onChange","e","target","concat","role","onClick","title","visiblePeople","sort","b","localeCompare","getSortMethod","reverse","sortPeopleBy","person--male","person--female","Math","ceil","died","person--selected","toggler","src_Person","peopleFromServer","App","setVisiblePeople","useEffect","preparedPeople","i","objectSpread2","id","century","children","setPreparedPeople","src_PeopleTable","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"uLAIMA,EAAa,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,IAAX,OACjBC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEEH,EAAAC,EAAAC,cAAA,QACEE,UAAWC,IACT,CAAEC,KAAc,MAARP,GACR,CAAEQ,OAAgB,MAARR,KAGXD,KASPF,EAAWY,aAAe,CACxBV,OAAQ,GACRC,IAAK,IAEQH,QC4BAa,EAjDA,SAAAZ,GAAA,IAAGC,EAAHD,EAAGC,OAAQY,EAAXb,EAAWa,QAAX,OACbV,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACGO,EAAQC,IAAI,SAAAC,GAAM,OACjBZ,EAAAC,EAAAC,cAAA,MACEW,IAAKD,EACLR,UAAWC,IACE,SAAXO,GAAqB,CAAEE,mBAAoBhB,EAAOiB,KAAO,MAC9C,QAAXH,GAAoB,CAAEI,cAAelB,EAAOmB,KAAO,IACxC,QAAXL,GAAoB,CAAEM,gBAAiBpB,EAAOmB,IAAM,MAGpD,WACA,OAAQL,GACN,IAAK,WACH,OACEd,EAAOc,GAAQD,IAAI,SAAAQ,GAAK,OACtBnB,EAAAC,EAAAC,cAAA,OAAKW,IAAKM,EAAMC,MACdpB,EAAAC,EAAAC,cAACmB,EAAD,CAAYvB,OAAQqB,EAAMC,KAAMrB,IAAKoB,EAAMpB,SAInD,IAAK,OACH,OACEC,EAAAC,EAAAC,cAACmB,EAAD,CACEvB,OAAQA,EAAOc,GACfb,IAAKD,EAAOC,MAGlB,IAAK,SACL,IAAK,SACH,OACEC,EAAAC,EAAAC,cAACmB,EAAD,CACEvB,OAAQA,EAAOc,GACfb,IAAgB,WAAXa,EAAsB,IAAM,MAGvC,QAAS,OAAOd,EAAOc,IAzBzB,QCXJU,EAAoB,CAAC,SAAU,SAAU,YA6IhCC,EA3IK,SAAA1B,GAAgB,IAAb2B,EAAa3B,EAAb2B,OAAaC,EACAC,mBAAS,MADTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC3BK,EAD2BH,EAAA,GAChBI,EADgBJ,EAAA,GAAAK,EAEEN,mBAAS,IAFXO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAE3BE,EAF2BD,EAAA,GAEfE,EAFeF,EAAA,GAAAG,EAGEV,mBAAS,IAHXW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAG3BE,EAH2BD,EAAA,GAGfE,EAHeF,EAAA,GAS5B3B,EAAU,CACd,KACA,OACA,MACA,OACA,OACA,SACA,SACA,MACA,UACA,YA6CI8B,EATW,SAACC,EAAGC,GACnB,IAAIC,EAEJ,OAAO,WAAa,QAAAC,EAAAC,UAAAC,OAATC,EAAS,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAATF,EAASE,GAAAJ,UAAAI,GAClBC,aAAaP,GACbA,EAAQQ,WAAW,kBAAMV,EAACW,WAAD,EAAKL,IAAOL,IAIXW,CAfT,SAACC,GACpBnB,EACEmB,EAAMC,OAAOC,gBAaoC,KAE/CC,EAAkBvB,EAEpBV,EACCkC,OAAO,SAAA5D,GAAM,OAAKA,EAAOsB,KAAOtB,EAAO6D,OAAS7D,EAAO8D,QACrDJ,cACAK,SAAS3B,EAAWqB,OAAOC,iBAJ9BhC,EAMJ,OACExB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,SACE4D,KAAK,OACL1D,UAAU,2BACV2D,YAAY,SACZC,SAAU,SAAAC,GAAC,OAAIzB,EAAsByB,EAAEC,OAAOZ,UAI5CtD,EAAAC,EAAAC,cAAA,QAAME,UAAU,6BAAhB,IAAA+D,OACOV,EAAeX,OADtB,wBAAAqB,OAEoC,IAA1BV,EAAeX,OAAe,SAAW,UAFnD,WAMJ9C,EAAAC,EAAAC,cAAA,SAAOE,UAAU,gBACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACGQ,EAAQC,IAAI,SAAAC,GAAM,OACjBU,EAAkBuC,SAASjD,GACzBZ,EAAAC,EAAAC,cAAA,MACEW,IAAKD,EACLwD,KAAK,gBAEJxD,GAGHZ,EAAAC,EAAAC,cAAA,MACEW,IAAKD,EACLwD,KAAK,eACLC,QAAS,kBAnEJ,SAACC,GACpB,IAAMC,EAAgB/C,EAElB8C,IAAUxC,GACZyC,EAAcC,KAnBI,SAACF,GACrB,OAAQA,GACN,IAAK,KACL,IAAK,MACL,IAAK,UACL,IAAK,OACL,IAAK,OACH,OAAO,SAACrE,EAAGwE,GAAJ,OAAUxE,EAAEqE,GAASG,EAAEH,IAChC,IAAK,OACL,IAAK,MACH,OAAO,SAACrE,EAAGwE,GAAJ,OAAUxE,EAAEqE,GAAOI,cAAcD,EAAEH,KAC5C,QAAS,QAQUK,CAAcL,IACjCvC,EAAauC,KAEbC,EAAcK,UACd7C,EAAa,KA2Dc8C,CAAajE,KAE3BA,OAMXZ,EAAAC,EAAAC,cAAA,aACGuD,EAAe9C,IAAI,SAAAb,GAAM,OACxBE,EAAAC,EAAAC,cAAA,MACEW,IAAKf,EAAOsB,KACZhB,UAAWC,IACT,SACA,CACEyE,eAA+B,MAAfhF,EAAOC,IACvBgF,iBAAiC,MAAfjF,EAAOC,KAJhB,2BAAAoE,OAMgBa,KAAKC,KAAKnF,EAAOoF,KAAO,MACnD,CAAEC,mBAAoB7C,IAAexC,EAAOsB,OAE9CiD,QAAS,kBAxHL,SAACvE,GACfyC,EAAczC,EAAOsB,MAuHIgE,CAAQtF,KAEvBE,EAAAC,EAAAC,cAACmF,EAAD,CAAQvF,OAAQA,EAAQY,QAASA,WCbhC4E,EAvHU,CACvB,CACElE,KAAM,oBAAqBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,kBAAmBD,OAAQ,qBAElG,CACEvC,KAAM,mBAAoBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,qBAAsBD,OAAQ,oBAEpG,CACEvC,KAAM,iBAAkBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,oBAAqBD,OAAQ,4BAEjG,CACEvC,KAAM,kBAAmBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,sBAAuBD,OAAQ,qBAEpG,CACEvC,KAAM,sBAAuBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,kBAAmBD,OAAQ,oBAEpG,CACEvC,KAAM,wBAAyBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,gCAAiCD,OAAQ,MAEpH,CACEvC,KAAM,wBAAyBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,mBAAoBD,OAAQ,MAEvG,CACEvC,KAAM,kBAAmBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,kBAAmBD,OAAQ,iBAEhG,CACEvC,KAAM,kBAAmBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,oBAAqBD,OAAQ,eAElG,CACEvC,KAAM,wBAAyBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,uBAAwBD,OAAQ,gBAE3G,CACEvC,KAAM,mBAAoBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,uBAAwBD,OAAQ,MAEtG,CACEvC,KAAM,mBAAoBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,mBAAoBD,OAAQ,kBAElG,CACEvC,KAAM,2BAA4BrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,mBAAoBD,OAAQ,sBAE1G,CACEvC,KAAM,uBAAwBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,wBAAyBD,OAAQ,iBAE3G,CACEvC,KAAM,wBAAyBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,2BAA4BD,OAAQ,MAE/G,CACEvC,KAAM,mBAAoBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,mBAAoBD,OAAQ,oBAElG,CACEvC,KAAM,0BAA2BrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,yBAA0BD,OAAQ,wBAE/G,CACEvC,KAAM,oBAAqBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,wBAAyBD,OAAQ,yBAExG,CACEvC,KAAM,mBAAoBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,2BAA4BD,OAAQ,oBAE1G,CACEvC,KAAM,sBAAuBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,gBAAiBD,OAAQ,kBAElG,CACEvC,KAAM,gBAAiBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,KAAMD,OAAQ,MAEjF,CACEvC,KAAM,2BAA4BrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,wBAAyBD,OAAQ,oBAE/G,CACEvC,KAAM,iBAAkBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,iBAAkBD,OAAQ,oBAE9F,CACEvC,KAAM,mBAAoBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,iBAAkBD,OAAQ,4BAEhG,CACEvC,KAAM,iBAAkBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,kBAAmBD,OAAQ,sBAE/F,CACEvC,KAAM,mBAAoBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,mBAAoBD,OAAQ,oBAElG,CACEvC,KAAM,mBAAoBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,mBAAoBD,OAAQ,kBAElG,CACEvC,KAAM,kBAAmBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,kBAAmBD,OAAQ,sBAEhG,CACEvC,KAAM,yBAA0BrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,2BAA4BD,OAAQ,oBAEhH,CACEvC,KAAM,kBAAmBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,kBAAmBD,OAAQ,oBAEhG,CACEvC,KAAM,uBAAwBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,mBAAoBD,OAAQ,oBAEtG,CACEvC,KAAM,iBAAkBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,cAAeD,OAAQ,kBAE3F,CACEvC,KAAM,sBAAuBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,gBAAiBD,OAAQ,kBAElG,CACEvC,KAAM,kBAAmBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,0BAA2BD,OAAQ,kBAExG,CACEvC,KAAM,mBAAoBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,gBAAiBD,OAAQ,yBAE/F,CACEvC,KAAM,gBAAiBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,mBAAoBD,OAAQ,oBAE/F,CACEvC,KAAM,iBAAkBrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,uBAAwBD,OAAQ,wBAEpG,CACEvC,KAAM,cAAerB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,gBAAiBD,OAAQ,qBAE1F,CACEvC,KAAM,gCAAiCrB,IAAK,IAAKgB,KAAM,KAAMmE,KAAM,KAAMtB,OAAQ,kBAAmBD,OAAQ,wBCpFjG4B,SA7BH,WAAM,IAAA9D,EAC0BC,mBAAS,IADnCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACT8C,EADS5C,EAAA,GACM6D,EADN7D,EAAA,GAsBhB,OALA8D,oBACE,kBAfwB,WACxB,IAAMC,EAAiBJ,EAAiB3E,IAAI,SAACb,EAAQ6F,GAAT,OAAA/D,OAAAgE,EAAA,EAAAhE,CAAA,GACvC9B,EADuC,CAE1CmB,IAAKnB,EAAOoF,KAAOpF,EAAOiB,KAC1B8E,GAAIF,EAAI,EACRG,QAASd,KAAKC,KAAKnF,EAAOoF,KAAO,KACjCa,SAAUT,EACP5B,OAAO,SAAAvC,GAAK,OAAIrB,EAAOsB,OAASD,EAAMyC,QAClC9D,EAAOsB,OAASD,EAAMwC,aAG/B6B,EAAiBE,GAIXM,IACN,IAIAhG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC+F,EAAD,CAAazE,OAAQ+C,OCxB3B2B,IAASC,OAAOnG,EAAAC,EAAAC,cAACkG,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.cf9a7a2b.chunk.js","sourcesContent":["import React, { } from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst PersonName = ({ person, sex }) => (\n  <>\n\n    <span\n      className={cn(\n        { male: sex === 'm' },\n        { female: sex === 'f' }\n      )}\n    >\n      {person}\n    </span>\n  </>\n);\n\nPersonName.propTypes = {\n  person: PropTypes.string,\n  sex: PropTypes.string,\n};\nPersonName.defaultProps = {\n  person: '',\n  sex: '',\n};\nexport default PersonName;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport PersonName from './PersonName';\n\nconst Person = ({ person, headers }) => (\n  <>\n    {headers.map(header => (\n      <td\n        key={header}\n        className={cn(\n          header === 'name' && { 'born-before-1650': person.born < 1650 },\n          header === 'age' && { older_than_65: person.age >= 65 },\n          header === 'age' && { younger_than_65: person.age < 65 },\n        )}\n      >\n        {(() => {\n          switch (header) {\n            case 'children':\n              return (\n                person[header].map(child => (\n                  <div key={child.name}>\n                    <PersonName person={child.name} sex={child.sex} />\n                  </div>\n                ))\n              );\n            case 'name':\n              return (\n                <PersonName\n                  person={person[header]}\n                  sex={person.sex}\n                />\n              );\n            case 'father':\n            case 'mother':\n              return (\n                <PersonName\n                  person={person[header]}\n                  sex={header === 'father' ? 'm' : 'f'}\n                />\n              );\n            default: return person[header];\n          }\n        })()}\n      </td>\n    ))}\n  </>\n);\n\nPerson.propTypes = {\n  person: PropTypes.objectOf(PropTypes.any).isRequired,\n  headers: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Person;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport Person from './Person';\n\nconst USTORTABLE_TITLES = ['mother', 'father', 'children'];\n\nconst PeopleTable = ({ people }) => {\n  const [isSorting, setIsSorting] = useState('id');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSelected, setIsSelected] = useState('');\n\n  const toggler = (person) => {\n    setIsSelected(person.name);\n  };\n\n  const headers = [\n    'id',\n    'name',\n    'sex',\n    'born',\n    'died',\n    'mother',\n    'father',\n    'age',\n    'century',\n    'children',\n  ];\n\n  const getSortMethod = (title) => {\n    switch (title) {\n      case 'id':\n      case 'age':\n      case 'century':\n      case 'born':\n      case 'died':\n        return (a, b) => a[title] - b[title];\n      case 'name':\n      case 'sex':\n        return (a, b) => a[title].localeCompare(b[title]);\n      default: return undefined;\n    }\n  };\n\n  const sortPeopleBy = (title) => {\n    const visiblePeople = people;\n\n    if (title !== isSorting) {\n      visiblePeople.sort(getSortMethod(title));\n      setIsSorting(title);\n    } else {\n      visiblePeople.reverse();\n      setIsSorting('');\n    }\n  };\n\n  const handleChange = (value) => {\n    setSearchTerm(\n      value.trim().toLowerCase()\n    );\n  };\n\n  const debounce = (f, delay) => {\n    let timer;\n\n    return (...args) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => f(...args), delay);\n    };\n  };\n\n  const debouncedHandleChange = debounce(handleChange, 1000);\n\n  const filteredPeople = !searchTerm\n    ? people\n    : people\n      .filter(person => (person.name + person.mother + person.father)\n        .toLowerCase()\n        .includes(searchTerm.trim().toLowerCase()));\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        className=\"people-list__searchInput\"\n        placeholder=\"Search\"\n        onChange={e => debouncedHandleChange(e.target.value)}\n      />\n      {\n        (\n          <span className=\"people-list__person-count\">\n            {` ${filteredPeople.length}\n                  ${filteredPeople.length === 1 ? 'person' : 'persons'} found`}\n          </span>\n        )\n      }\n      <table className=\"people-table\">\n        <thead>\n          <tr>\n            {headers.map(header => (\n              USTORTABLE_TITLES.includes(header) ? (\n                <td\n                  key={header}\n                  role=\"presentation\"\n                >\n                  {header}\n                </td>\n              ) : (\n                <td\n                  key={header}\n                  role=\"presentation\"\n                  onClick={() => sortPeopleBy(header)}\n                >\n                  {header}\n                </td>\n              )\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {filteredPeople.map(person => (\n            <tr\n              key={person.name}\n              className={cn(\n                'person',\n                {\n                  'person--male': person.sex === 'm',\n                  'person--female': person.sex === 'f',\n                },\n                `person person--lived-in-${Math.ceil(person.died / 100)}`,\n                { 'person--selected': isSelected === person.name }\n              )}\n              onClick={() => toggler(person)}\n            >\n              <Person person={person} headers={headers} />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default PeopleTable;\n","/* eslint-disable max-len */\n\nconst peopleFromServer = [\n  {\n    name: 'Carolus Haverbeke', sex: 'm', born: 1832, died: 1905, father: 'Carel Haverbeke', mother: 'Maria van Brussel',\n  },\n  {\n    name: 'Emma de Milliano', sex: 'f', born: 1876, died: 1956, father: 'Petrus de Milliano', mother: 'Sophia van Damme',\n  },\n  {\n    name: 'Maria de Rycke', sex: 'f', born: 1683, died: 1724, father: 'Frederik de Rycke', mother: 'Laurentia van Vlaenderen',\n  },\n  {\n    name: 'Jan van Brussel', sex: 'm', born: 1714, died: 1748, father: 'Jacobus van Brussel', mother: 'Joanna van Rooten',\n  },\n  {\n    name: 'Philibert Haverbeke', sex: 'm', born: 1907, died: 1997, father: 'Emile Haverbeke', mother: 'Emma de Milliano',\n  },\n  {\n    name: 'Jan Frans van Brussel', sex: 'm', born: 1761, died: 1833, father: 'Jacobus Bernardus van Brussel', mother: null,\n  },\n  {\n    name: 'Pauwels van Haverbeke', sex: 'm', born: 1535, died: 1582, father: 'N. van Haverbeke', mother: null,\n  },\n  {\n    name: 'Clara Aernoudts', sex: 'f', born: 1918, died: 2012, father: 'Henry Aernoudts', mother: 'Sidonie Coene',\n  },\n  {\n    name: 'Emile Haverbeke', sex: 'm', born: 1877, died: 1968, father: 'Carolus Haverbeke', mother: 'Maria Sturm',\n  },\n  {\n    name: 'Lieven de Causmaecker', sex: 'm', born: 1696, died: 1724, father: 'Carel de Causmaecker', mother: 'Joanna Claes',\n  },\n  {\n    name: 'Pieter Haverbeke', sex: 'm', born: 1602, died: 1642, father: 'Lieven van Haverbeke', mother: null,\n  },\n  {\n    name: 'Livina Haverbeke', sex: 'f', born: 1692, died: 1743, father: 'Daniel Haverbeke', mother: 'Joanna de Pape',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke', sex: 'm', born: 1695, died: 1762, father: 'Willem Haverbeke', mother: 'Petronella Wauters',\n  },\n  {\n    name: 'Lieven van Haverbeke', sex: 'm', born: 1570, died: 1636, father: 'Pauwels van Haverbeke', mother: 'Lievijne Jans',\n  },\n  {\n    name: 'Joanna de Causmaecker', sex: 'f', born: 1762, died: 1807, father: 'Bernardus de Causmaecker', mother: null,\n  },\n  {\n    name: 'Willem Haverbeke', sex: 'm', born: 1668, died: 1731, father: 'Lieven Haverbeke', mother: 'Elisabeth Hercke',\n  },\n  {\n    name: 'Pieter Antone Haverbeke', sex: 'm', born: 1753, died: 1798, father: 'Jan Francies Haverbeke', mother: 'Petronella de Decker',\n  },\n  {\n    name: 'Maria van Brussel', sex: 'f', born: 1801, died: 1834, father: 'Jan Frans van Brussel', mother: 'Joanna de Causmaecker',\n  },\n  {\n    name: 'Angela Haverbeke', sex: 'f', born: 1728, died: 1734, father: 'Pieter Bernard Haverbeke', mother: 'Livina de Vrieze',\n  },\n  {\n    name: 'Elisabeth Haverbeke', sex: 'f', born: 1711, died: 1754, father: 'Jan Haverbeke', mother: 'Maria de Rycke',\n  },\n  {\n    name: 'Lievijne Jans', sex: 'f', born: 1542, died: 1582, father: null, mother: null,\n  },\n  {\n    name: 'Bernardus de Causmaecker', sex: 'm', born: 1721, died: 1789, father: 'Lieven de Causmaecker', mother: 'Livina Haverbeke',\n  },\n  {\n    name: 'Jacoba Lammens', sex: 'f', born: 1699, died: 1740, father: 'Lieven Lammens', mother: 'Livina de Vrieze',\n  },\n  {\n    name: 'Pieter de Decker', sex: 'm', born: 1705, died: 1780, father: 'Joos de Decker', mother: 'Petronella van de Steene',\n  },\n  {\n    name: 'Joanna de Pape', sex: 'f', born: 1654, died: 1723, father: 'Vincent de Pape', mother: 'Petronella Wauters',\n  },\n  {\n    name: 'Daniel Haverbeke', sex: 'm', born: 1652, died: 1723, father: 'Lieven Haverbeke', mother: 'Elisabeth Hercke',\n  },\n  {\n    name: 'Lieven Haverbeke', sex: 'm', born: 1631, died: 1676, father: 'Pieter Haverbeke', mother: 'Anna van Hecke',\n  },\n  {\n    name: 'Martina de Pape', sex: 'f', born: 1666, died: 1727, father: 'Vincent de Pape', mother: 'Petronella Wauters',\n  },\n  {\n    name: 'Jan Francies Haverbeke', sex: 'm', born: 1725, died: 1779, father: 'Pieter Bernard Haverbeke', mother: 'Livina de Vrieze',\n  },\n  {\n    name: 'Maria Haverbeke', sex: 'm', born: 1905, died: 1997, father: 'Emile Haverbeke', mother: 'Emma de Milliano',\n  },\n  {\n    name: 'Petronella de Decker', sex: 'f', born: 1731, died: 1781, father: 'Pieter de Decker', mother: 'Livina Haverbeke',\n  },\n  {\n    name: 'Livina Sierens', sex: 'f', born: 1761, died: 1826, father: 'Jan Sierens', mother: 'Maria van Waes',\n  },\n  {\n    name: 'Laurentia Haverbeke', sex: 'f', born: 1710, died: 1786, father: 'Jan Haverbeke', mother: 'Maria de Rycke',\n  },\n  {\n    name: 'Carel Haverbeke', sex: 'm', born: 1796, died: 1837, father: 'Pieter Antone Haverbeke', mother: 'Livina Sierens',\n  },\n  {\n    name: 'Elisabeth Hercke', sex: 'f', born: 1632, died: 1674, father: 'Willem Hercke', mother: 'Margriet de Brabander',\n  },\n  {\n    name: 'Jan Haverbeke', sex: 'm', born: 1671, died: 1731, father: 'Lieven Haverbeke', mother: 'Elisabeth Hercke',\n  },\n  {\n    name: 'Anna van Hecke', sex: 'f', born: 1607, died: 1670, father: 'Paschasius van Hecke', mother: 'Martijntken Beelaert',\n  },\n  {\n    name: 'Maria Sturm', sex: 'f', born: 1835, died: 1917, father: 'Charles Sturm', mother: 'Seraphina Spelier',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel', sex: 'm', born: 1736, died: 1809, father: 'Jan van Brussel', mother: 'Elisabeth Haverbeke',\n  }];\n\nexport default peopleFromServer;\n","import React, { useState, useEffect } from 'react';\nimport PeopleTable from './PeopleTable';\nimport peopleFromServer from './people';\nimport './App.css';\n\nconst App = () => {\n  const [visiblePeople, setVisiblePeople] = useState([]);\n\n  const setPreparedPeople = () => {\n    const preparedPeople = peopleFromServer.map((person, i) => ({\n      ...person,\n      age: person.died - person.born,\n      id: i + 1,\n      century: Math.ceil(person.died / 100),\n      children: peopleFromServer\n        .filter(child => person.name === child.father\n          || person.name === child.mother),\n    }));\n\n    setVisiblePeople(preparedPeople);\n  };\n\n  useEffect(\n    () => setPreparedPeople(),\n    []\n  );\n\n  return (\n    <div className=\"App\">\n      <PeopleTable people={visiblePeople} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}